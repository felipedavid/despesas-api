// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"pt_BR": &dictionary{index: pt_BRIndex, data: pt_BRData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"cannot be empty":                      2,
	"invalid credentials":                  0,
	"must be provided":                     1,
	"should be 26 bytes long":              4,
	"should be at least 3 characters long": 5,
	"should be at least 8 characters long": 3,
}

var en_USIndex = []uint32{ // 7 elements
	0x00000000, 0x00000014, 0x00000025, 0x00000035,
	0x0000005a, 0x00000072, 0x00000097,
} // Size: 52 bytes

const en_USData string = "" + // Size: 151 bytes
	"\x02invalid credentials\x02must be provided\x02cannot be empty\x02should" +
	" be at least 8 characters long\x02should be 26 bytes long\x02should be a" +
	"t least 3 characters long"

var pt_BRIndex = []uint32{ // 7 elements
	0x00000000, 0x00000000, 0x00000016, 0x0000002c,
	0x0000004c, 0x00000076, 0x00000096,
} // Size: 52 bytes

const pt_BRData string = "" + // Size: 150 bytes
	"\x02precisa ser informado\x02n√£o pode estar vazio\x02deve ter pelomenos " +
	"8 caracteres\x02deveria ter pelomenos 26 bytes de tamanho\x02deve ter pe" +
	"lomenos 3 caracteres"

	// Total table size 405 bytes (0KiB); checksum: 6841F278
